version: '3'
services:
  download:
    depends_on:
      - redis
    build: download
    container_name: download
    volumes:
      - .:/application
  crt:
    build: crt
    container_name: crt
    depends_on:
      - redis
    #devices:
      #- /dev/dri:/dev/dri
    volumes:
      - .:/application
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
  nextjs:
    container_name: nextjs
    build: nextjs
    depends_on:
      - redis
    volumes:
      - .:/application
    entrypoint: ["npx", "next", "dev"]
  haproxy:
    depends_on:
      - nextjs
      - apache 
    build: haproxy
    container_name: haproxy
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  apache:
    image: httpd:2.4
    container_name: apache
    volumes:
      - ./media/hls:/usr/local/apache2/htdocs/
    environment:
      - TZ=UTC
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: television
      POSTGRES_USER: television
      POSTGRES_PASSWORD: television
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql